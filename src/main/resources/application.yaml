server:
  servlet:
    context-path: /api

blog:
  auth:
    token:
      sign-key: signKey012345678901234567890123456789
      valid-access-time: 1800
      valid-refresh-time: 100000000

web:
  cors:
    allowed-origins: "*"
    allowed-methods: GET, POST, PATCH, PUT, DELETE, OPTIONS, HEAD
    max-age: 3600
    allowed-headers: "Requestor-Type"
    exposed-headers: "X-Get-Header"
spring:
  datasource:
    hikari:
      maxLifeTime: '600000'
  messages:
    always-use-message-format: false
    basename: messages
    cache-duration: '-1'
    encoding: UTF-8
    fallback-to-system-locale: true
  jpa:
    database: POSTGRESQL
    properties:
      hibernate:
        format_sql: false
    show-sql: true
  kafka:
    bootstrap-servers: 192.168.1.8:29093
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: consumer-articles
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    elasticsearch:
      topic:
        name: articles

  data:
    elasticsearch:
      repositories:
        enabled: true
      # cluster-nodes: 192.168.1.8:9200
      # cluster-name:  elasticsearch

  elasticsearch:
    rest:
      uris: 192.168.1.8:9200
      username: elastic
      password: nuE9TjbhqMTe-p4Z+fhB

elasticsearch:
  url: 192.168.1.8:9200

logging:
  level:
      org:
        hibernate:
          type: trace
